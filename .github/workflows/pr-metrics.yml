name: ROI PR metrics

on:
  pull_request:
    types: [review_requested]

jobs:
  record_pr_timestamp:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' # TODO: switched places with outputs
    outputs: # TODO: test the change of the output 
      pr_timestamp: ${{ steps.record_pr_timestamp.outputs.pr_timestamp }} # echo "::set-output name=pr_timestamp::${seconds_since_epoch}" #  echo "pr_timestamp=${seconds_since_epoch}"
    steps:
      - name: Get Current Timestamp for PR
        id: pr_timestamp
        run: | 
          current_timestamp=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          seconds_since_epoch=$(date -d "${current_timestamp}" +%s)
          echo "PR timestamp: ${current_timestamp}"
          echo "PR timestamp in seconds: ${seconds_since_epoch}"
          echo "::set-output name=pr_timestamp::${seconds_since_epoch}"

  get_issue_timestamp:
    needs: record_pr_timestamp
    runs-on: ubuntu-latest
    outputs: 
      issue_timestamp: ${{ steps.get_issue_timestamp.outputs.issue_timestamp }} 
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
        
      - name: Get Issue Timestamp # echo "::set-output name=issue_timestamp::${seconds_since_epoch}" # echo "issue_timestamp=${seconds_since_epoch}"
        id: get_issue_timestamp 
        working-directory: roiScript
        run: | # timestamp: Dunridge, issue #767: 2023-11-14 16:06:02 # TODO: specify all of the conditions in this cat command for telling apart the users 
          issue_timestamp=$(cat issue_timestamp.log | awk -F ': ' '{print $2}')
          seconds_since_epoch=$(date -d "${issue_timestamp}" +"%s")
          echo "Issue timestamp from the first step: ${issue_timestamp}"
          echo "Issue timestamp in seconds: ${seconds_since_epoch}"
          echo "::set-output name=issue_timestamp::${seconds_since_epoch}"

  calculate_time_difference:
    needs: get_issue_timestamp
    runs-on: ubuntu-latest
    env: 
      pr_timestamp_input: ${{needs.record_pr_timestamp.outputs.pr_timestamp}}
      issue_timestamp_input: ${{needs.get_issue_timestamp.outputs.issue_timestamp}}
    steps:
      - name: Calculate Time Difference # TODO: debug this ... # TODO: do the same thing with outputs here if this works
        id: time_difference
        run: |
          issue_timestamp=$issue_timestamp_input
          echo "Issue timestamp (seconds): ${issue_timestamp}"
          pr_timestamp=$pr_timestamp_input
          echo "PR timestamp (seconds): ${pr_timestamp}"
          time_diff=$((pr_timestamp - issue_timestamp))
          echo "Time Difference: ${time_diff}"
          echo "::set-output name=time_diff::${time_diff}"

  metric:
    needs: calculate_time_difference
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18 # pick the node version that's compatible with libraries

      - name: Print Node.js path
        run: which node

      - name: Install
        run: npm install
        working-directory: ./roiScript

      #  PR_PAYLOAD: ${{ steps.pr-payload.outputs.pr_payload }}
      - name: Run
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          TIME_DIFF: ${{ needs.calculate_time_difference.outputs.time_diff }}
        run: node ./roiScript/issue-metrics.mjs
